name: Publish

on:
  push:
    branches: [ "master" ]

jobs:

  check:
    name: Check changed files
    outputs:
      CHECK_WEBAPI: ${{ steps.check_files.outputs.CHECK_WEBAPI }}
      CHECK_IDENTITY_SERVER: ${{ steps.check_files.outputs.CHECK_IDENTITY_SERVER }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
            echo "=============== list modified files ==============="
            git diff --name-only HEAD^ HEAD

            echo "========== check paths of modified files =========="
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == Notes.Application/* ]] ||
                 [[ $file == Notes.Data/* ]] ||
                 [[ $file == Notes.Domain/* ]] ||
                 [[ $file == Notes.WebApi/* ]]; then
                echo "CHECK_WEBAPI=true" >> $GITHUB_OUTPUT
              elif [[ $file == Notes.IdentityServer/* ]]; then
                echo "CHECK_IDENTITY_SERVER=true" >> $GITHUB_OUTPUT
              else 
                echo "File '$file' does not belong to any service"
              fi
            done < files.txt


  web_api:
    needs: check
    if: needs.check.outputs.CHECK_WEBAPI == 'true'
    runs-on: ubuntu-latest

    env:
      LOCALHOST_ROOT_CA_CRT: ${{ secrets.LOCALHOST_ROOT_CA_CRT }}
      LOCALHOST_ROOT_CA_KEY: ${{ secrets.LOCALHOST_ROOT_CA_KEY }}
      LOCALHOST_ROOT_CA_PASSWORD: ${{ secrets.LOCALHOST_ROOT_CA_PASSWORD }}

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Notes.WebApi/Dockerfile
        build-args: |
          LOCALHOST_ROOT_CA_CRT
          LOCALHOST_ROOT_CA_KEY
          LOCALHOST_ROOT_CA_PASSWORD
        platforms: linux/amd64
        push: true
        tags: |
          mnormatov2001/notes-api:latest
          mnormatov2001/notes-api:${{ github.sha }}
        

  identity_server:
    needs: check
    if: needs.check.outputs.CHECK_IDENTITY_SERVER == 'true'
    runs-on: ubuntu-latest

    env:
      SMTP_CLIENT_USERNAME: ${{ secrets.SMTP_CLIENT_USERNAME }}
      SMTP_CLIENT_PASSWORD: ${{ secrets.SMTP_CLIENT_PASSWORD }}
      LOCALHOST_ROOT_CA_CRT: ${{ secrets.LOCALHOST_ROOT_CA_CRT }}
      LOCALHOST_ROOT_CA_KEY: ${{ secrets.LOCALHOST_ROOT_CA_KEY }}
      LOCALHOST_ROOT_CA_PASSWORD: ${{ secrets.LOCALHOST_ROOT_CA_PASSWORD }}

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./Notes.IdentityServer/
        file: ./Notes.IdentityServer/Dockerfile
        build-args: |
          SMTP_CLIENT_USERNAME
          SMTP_CLIENT_PASSWORD
          LOCALHOST_ROOT_CA_CRT
          LOCALHOST_ROOT_CA_KEY
          LOCALHOST_ROOT_CA_PASSWORD
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          mnormatov2001/notes-identity-server:latest
          mnormatov2001/notes-identity-server:${{ github.sha }}
