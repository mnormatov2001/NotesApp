// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notes.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Notes.Data.Migrations.NotesDb;

[DbContext(typeof(NotesDbContext))]
partial class NotesDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.16")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Notes.Domain.Note", b =>
        {
            b.Property<Guid>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("uuid");

            b.Property<string>("Content")
                .HasColumnType("text");

            b.Property<string>("CoverImage")
                .HasColumnType("text");

            b.Property<DateTime>("CreationDate")
                .HasColumnType("timestamp with time zone");

            b.Property<DateTime>("EditDate")
                .HasColumnType("timestamp with time zone");

            b.Property<string>("Icon")
                .HasMaxLength(10)
                .HasColumnType("character varying(10)");

            b.Property<bool>("IsArchived")
                .HasColumnType("boolean");

            b.Property<bool>("IsPublished")
                .HasColumnType("boolean");

            b.Property<Guid>("ParentNoteId")
                .HasColumnType("uuid");

            b.Property<string>("Title")
                .IsRequired()
                .HasMaxLength(250)
                .HasColumnType("character varying(250)");

            b.Property<Guid>("UserId")
                .HasColumnType("uuid");

            b.HasKey("Id");

            b.HasIndex("Id")
                .IsUnique();

            b.HasIndex("ParentNoteId");

            b.ToTable("Notes");
        });
#pragma warning restore 612, 618
    }
}